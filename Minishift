////////////////////////////////////////
// Install minishift

// 1. Install Minishift
brew cask install minishift
brew cask uninstall minishift
// .. is installed to ..
/usr/local/bin/minishift

// 2. Install xhyve
brew install --HEAD xhyve

// Install KVM Driver
sudo curl -L https://github.com/dhiltgen/docker-machine-kvm/releases/download/v0.7.0/docker-machine-driver-kvm -o /usr/local/bin/docker-machine-driver-kvm

// Make the binary executable
sudo chmod +x /usr/local/bin/docker-machine-driver-kvm

// 3. Install the latest drivers via homebrew
// https://docs.openshift.org/latest/minishift/getting-started/setting-up-driver-plugin.html
brew install docker-machine-driver-xhyve

// 4. Gain the rights
sudo chown root:wheel $(brew --prefix)/opt/docker-machine-driver-xhyve/bin/docker-machine-driver-xhyve
sudo chmod u+s $(brew --prefix)/opt/docker-machine-driver-xhyve/bin/docker-machine-driver-xhyve

// 5. Start minishift - This will get the sources and run minishift.
minishift start

////////////////////////////////////////////
// Using host folders
// 1. List existing folders
minishift hostfolder list

// 2. Add hostfolder
minishift hostfolder add myshare
UNC path: //192.168.99.1/MYSHARE
Mountpoint [/mnt/sda1/myshare]:
Username: john
Password: [HIDDEN]
Domain:
Added: myshare

// 3. Mount folders
minishift hostfolder mount myshare

////////////////////////////////////////
// Runtime service php
http://phptest-horizonte.192.168.64.2.nip.io

//////////////////////////////////////////
// Lessons Learned - Info by Alex Ilies
// Minishift does not allow to access mysql servers from outside.
// This is why mysql and php run inside minishift, which is also a container.
// Pods inside minishift have access to all routed services, e.g. php->mysql, and so on.
// In the real openshift it should work.

// 1. Start ssh inside Minishift
minishift ssh
// 2. List all networks inside minishift
docker network ls
// 3. Inspect network by id - first, the bridge network ...
docker network inspect c81162d0ae8b

//////////////////////////////////////////
// Update container from git
// 1. Update files in git
// 2. Open Overview Tab in web ui
// 3. Click Rebuild on the pod.
// Done.

/////////////////////////////////////////////
// Changing base memory size for all dockers
// minishift config set memory 16384
//  .. You currently have an existing Minishift instance. Changes to the 'memory' setting are only applied
//     when a new Minishift instance is created.
//  .. To let the configuration changes take effect, you must delete the current instance
//     with 'minishift delete' and then start a new one with 'minishift start'.

/////////////////////////////////////////////
// Errors and Solutions:
////////////
//Blog: https://github.com/minishift/minishift/issues/856
//Error:      open /var/lib/minishift/openshift.local.volumes/pods/5f216b37-2781-11e8-81b5-b675ba882a05/etc-hosts:
//            no such file or directory
//Solution: $ minishift ssh -- "sudo chmod -R o+rwx /var/lib/minishift/openshift.local.pv/pv*"

////////////////////////////////////////
// How to look into an image
///////////////////////////
// 1. Open hub.docker.com
// 2. Search and find the Image
// 3. Use the provided Dockerfiles to build an image.
// 4. Open the git Repository
// .. Done: Image files are ready to watch

////////////////////////////////////
// Architecture
////////////////
-----------------------------------------
 5. group pods to services/Applications
-----------------------------------------
.. Deploy
 4. group multiple containers to pods.
    They will share one pvc and ip/ports
    Shutdown a running container
    Boot a new container from the updated image
-----------------------------------------
.. Deploy
 3. Run an image as a container
-----------------------------------------
.. Build
 2. Create an image from the Dockerfile
    Pull an image from a remote repository
-----------------------------------------
.. Build
 1. Create/Download a Dockerfile
-----------------------------------------
